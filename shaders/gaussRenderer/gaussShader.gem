#version 330
#extension GL_EXT_geometry_shader4: enable

layout(points) in;
layout(triangle_strip, max_vertices = 256) out;

uniform float sideFactor;
uniform mat4 MVP;

uniform sampler2D pointTexture;
uniform int width;
uniform int height;

flat out float fWeight;
out vec2 vTexCoord;


void main(void) 
{
	int k = 0;

	for (int y = 0; y < 8; y++) {
		for (int x = 0; x < 8; x++) {


			vec2 texCoord = gl_PositionIn[k].xy + vec2(0.5f,0.5f) + vec2(x,y);
			texCoord = texCoord / vec2(width, height);

			float weight = texture(pointTexture, texCoord).b;

			if (weight > 0.0f && texCoord.x <= 1.0f && texCoord.y <= 1.0f) {

				vec4 sides = MVP * vec4(sideFactor, sideFactor, 0.0, 0.0);
				vec4 pos = vec4(texCoord.x * 2.0f - 1.0f, texCoord.y * 2.0f - 1.0f, 0, 1);

				//left upper
				gl_Position = pos + vec4(-sides.x, sides.y, 0.0, 0.0);
				vTexCoord = vec2(0.0, 0.0);
				fWeight = weight;
				EmitVertex();

				//left lower
				gl_Position = pos + vec4(-sides.x, -sides.y, 0.0, 0.0);
				vTexCoord = vec2(0.0, 1.0);
				fWeight = weight;
				EmitVertex();

				//right upper
				gl_Position = pos + vec4(sides.x, sides.y, 0.0, 0.0);
				vTexCoord = vec2(1.0, 0.0);
				fWeight = weight;
				EmitVertex();

				//right lower
				gl_Position = pos + vec4(sides.x, -sides.y, 0.0, 0.0);
				vTexCoord = vec2(1.0, 1.0);
				fWeight = weight;
				EmitVertex();

				//finish
				EndPrimitive();

			}
		}
	}
}